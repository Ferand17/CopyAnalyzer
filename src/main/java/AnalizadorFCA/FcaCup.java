
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Tue Aug 24 23:32:24 CST 2021
//----------------------------------------------------

package AnalizadorFCA;

import java_cup.runtime.Symbol;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Tue Aug 24 23:32:24 CST 2021
  */
public class FcaCup extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public FcaCup() {super();}

  /** Constructor which sets the default scanner. */
  public FcaCup(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public FcaCup(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\045\000\002\002\004\000\002\002\003\000\002\003" +
    "\007\000\002\003\007\000\002\003\007\000\002\003\007" +
    "\000\002\003\007\000\002\003\006\000\002\003\006\000" +
    "\002\003\006\000\002\003\006\000\002\003\006\000\002" +
    "\004\010\000\002\004\007\000\002\005\011\000\002\005" +
    "\011\000\002\006\007\000\002\006\006\000\002\007\003" +
    "\000\002\007\003\000\002\010\003\000\002\010\003\000" +
    "\002\010\003\000\002\010\003\000\002\010\005\000\002" +
    "\010\006\000\002\010\014\000\002\011\003\000\002\011" +
    "\003\000\002\011\003\000\002\011\003\000\002\011\003" +
    "\000\002\011\003\000\002\012\005\000\002\012\004\000" +
    "\002\012\004\000\002\012\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\151\000\014\005\005\006\006\020\012\021\011\022" +
    "\007\001\002\000\016\002\000\005\130\006\131\020\134" +
    "\021\133\022\132\001\002\000\004\026\111\001\002\000" +
    "\004\026\106\001\002\000\004\026\067\001\002\000\004" +
    "\002\066\001\002\000\004\026\063\001\002\000\004\026" +
    "\013\001\002\000\016\011\015\012\014\013\020\016\022" +
    "\017\021\023\017\001\002\000\004\033\uffe5\001\002\000" +
    "\004\033\uffe6\001\002\000\004\033\060\001\002\000\004" +
    "\033\uffe1\001\002\000\004\033\uffe4\001\002\000\004\033" +
    "\uffe2\001\002\000\004\033\uffe3\001\002\000\020\011\015" +
    "\012\014\013\020\016\022\017\021\023\017\027\024\001" +
    "\002\000\016\002\ufff8\005\ufff8\006\ufff8\020\ufff8\021\ufff8" +
    "\022\ufff8\001\002\000\004\033\026\001\002\000\016\024" +
    "\035\025\031\035\034\036\030\041\032\042\027\001\002" +
    "\000\024\024\uffec\025\uffec\032\uffec\035\uffec\036\uffec\037" +
    "\uffec\040\uffec\041\uffec\042\uffec\001\002\000\016\024\035" +
    "\025\031\035\034\036\030\041\032\042\027\001\002\000" +
    "\024\024\uffea\025\uffea\032\uffea\035\uffea\036\uffea\037\uffea" +
    "\040\uffea\041\uffea\042\uffea\001\002\000\024\024\uffed\025" +
    "\uffed\032\uffed\035\uffed\036\uffed\037\uffed\040\uffed\041\uffed" +
    "\042\uffed\001\002\000\004\032\051\001\002\000\004\026" +
    "\036\001\002\000\024\024\uffeb\025\uffeb\032\uffeb\035\uffeb" +
    "\036\uffeb\037\uffeb\040\uffeb\041\uffeb\042\uffeb\001\002\000" +
    "\006\014\040\015\037\001\002\000\004\027\050\001\002" +
    "\000\004\040\041\001\002\000\004\024\042\001\002\000" +
    "\004\040\043\001\002\000\004\024\044\001\002\000\004" +
    "\040\045\001\002\000\004\024\046\001\002\000\004\027" +
    "\047\001\002\000\024\024\uffe7\025\uffe7\032\uffe7\035\uffe7" +
    "\036\uffe7\037\uffe7\040\uffe7\041\uffe7\042\uffe7\001\002\000" +
    "\024\024\uffe8\025\uffe8\032\uffe8\035\uffe8\036\uffe8\037\uffe8" +
    "\040\uffe8\041\uffe8\042\uffe8\001\002\000\020\011\ufff1\012" +
    "\ufff1\013\ufff1\016\ufff1\017\ufff1\023\ufff1\027\ufff1\001\002" +
    "\000\020\024\035\025\031\035\034\036\030\037\056\041" +
    "\032\042\027\001\002\000\022\024\uffdd\025\uffdd\035\uffdd" +
    "\036\uffdd\037\uffdd\040\054\041\uffdd\042\uffdd\001\002\000" +
    "\020\024\uffde\025\uffde\035\uffde\036\uffde\037\uffde\041\uffde" +
    "\042\uffde\001\002\000\022\024\uffdf\025\uffdf\035\uffdf\036" +
    "\uffdf\037\uffdf\040\057\041\uffdf\042\uffdf\001\002\000\024" +
    "\024\uffe9\025\uffe9\032\uffe9\035\uffe9\036\uffe9\037\uffe9\040" +
    "\uffe9\041\uffe9\042\uffe9\001\002\000\020\024\uffe0\025\uffe0" +
    "\035\uffe0\036\uffe0\037\uffe0\041\uffe0\042\uffe0\001\002\000" +
    "\016\024\035\025\031\035\034\036\030\041\032\042\027" +
    "\001\002\000\004\032\062\001\002\000\020\011\ufff0\012" +
    "\ufff0\013\ufff0\016\ufff0\017\ufff0\023\ufff0\027\ufff0\001\002" +
    "\000\016\011\015\012\014\013\020\016\022\017\021\023" +
    "\017\001\002\000\020\011\015\012\014\013\020\016\022" +
    "\017\021\023\017\027\065\001\002\000\016\002\ufff7\005" +
    "\ufff7\006\ufff7\020\ufff7\021\ufff7\022\ufff7\001\002\000\004" +
    "\002\001\001\002\000\004\004\070\001\002\000\004\030" +
    "\073\001\002\000\004\027\072\001\002\000\016\002\ufff6" +
    "\005\ufff6\006\ufff6\020\ufff6\021\ufff6\022\ufff6\001\002\000" +
    "\006\024\075\025\074\001\002\000\004\040\102\001\002" +
    "\000\004\040\076\001\002\000\004\024\077\001\002\000" +
    "\004\031\100\001\002\000\004\032\101\001\002\000\004" +
    "\027\ufff3\001\002\000\004\025\103\001\002\000\004\031" +
    "\104\001\002\000\004\032\105\001\002\000\004\027\ufff2" +
    "\001\002\000\016\011\015\012\014\013\020\016\022\017" +
    "\021\023\017\001\002\000\020\011\015\012\014\013\020" +
    "\016\022\017\021\023\017\027\110\001\002\000\016\002" +
    "\ufff9\005\ufff9\006\ufff9\020\ufff9\021\ufff9\022\ufff9\001\002" +
    "\000\006\007\112\010\113\001\002\000\004\041\uffef\001" +
    "\002\000\004\041\uffee\001\002\000\004\041\124\001\002" +
    "\000\010\007\112\010\113\027\116\001\002\000\016\002" +
    "\ufffa\005\ufffa\006\ufffa\020\ufffa\021\ufffa\022\ufffa\001\002" +
    "\000\004\041\120\001\002\000\004\034\121\001\002\000" +
    "\016\024\035\025\031\035\034\036\030\041\032\042\027" +
    "\001\002\000\004\032\123\001\002\000\010\007\ufff5\010" +
    "\ufff5\027\ufff5\001\002\000\004\034\125\001\002\000\016" +
    "\024\035\025\031\035\034\036\030\041\032\042\027\001" +
    "\002\000\004\032\127\001\002\000\010\007\ufff4\010\ufff4" +
    "\027\ufff4\001\002\000\004\026\151\001\002\000\004\026" +
    "\146\001\002\000\004\026\143\001\002\000\004\026\140" +
    "\001\002\000\004\026\135\001\002\000\016\011\015\012" +
    "\014\013\020\016\022\017\021\023\017\001\002\000\020" +
    "\011\015\012\014\013\020\016\022\017\021\023\017\027" +
    "\137\001\002\000\016\002\ufffd\005\ufffd\006\ufffd\020\ufffd" +
    "\021\ufffd\022\ufffd\001\002\000\016\011\015\012\014\013" +
    "\020\016\022\017\021\023\017\001\002\000\020\011\015" +
    "\012\014\013\020\016\022\017\021\023\017\027\142\001" +
    "\002\000\016\002\ufffc\005\ufffc\006\ufffc\020\ufffc\021\ufffc" +
    "\022\ufffc\001\002\000\004\004\070\001\002\000\004\027" +
    "\145\001\002\000\016\002\ufffb\005\ufffb\006\ufffb\020\ufffb" +
    "\021\ufffb\022\ufffb\001\002\000\016\011\015\012\014\013" +
    "\020\016\022\017\021\023\017\001\002\000\020\011\015" +
    "\012\014\013\020\016\022\017\021\023\017\027\150\001" +
    "\002\000\016\002\ufffe\005\ufffe\006\ufffe\020\ufffe\021\ufffe" +
    "\022\ufffe\001\002\000\006\007\112\010\113\001\002\000" +
    "\010\007\112\010\113\027\153\001\002\000\016\002\uffff" +
    "\005\uffff\006\uffff\020\uffff\021\uffff\022\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\151\000\006\002\007\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\022\011\015\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\011\024" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\010" +
    "\032\001\001\000\002\001\001\000\006\010\052\012\051" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\054\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\060\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\006\063\011\015\001" +
    "\001\000\004\011\024\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\005\070\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\106\011\015\001\001\000\004\011\024\001\001" +
    "\000\002\001\001\000\006\004\114\007\113\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\116\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\121\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\010\125\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\135\011\015\001\001\000\004" +
    "\011\024\001\001\000\002\001\001\000\006\006\140\011" +
    "\015\001\001\000\004\011\024\001\001\000\002\001\001" +
    "\000\004\005\143\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\146\011\015\001\001\000\004\011\024" +
    "\001\001\000\002\001\001\000\006\004\151\007\113\001" +
    "\001\000\004\007\116\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$FcaCup$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$FcaCup$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$FcaCup$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol s;
    public void syntax_error(Symbol s){
        this.s = s;
    }
    public Symbol getS(){
        return this.s;
}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$FcaCup$actions {
  private final FcaCup parser;

  /** Constructor */
  CUP$FcaCup$actions(FcaCup parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$FcaCup$do_action(
    int                        CUP$FcaCup$act_num,
    java_cup.runtime.lr_parser CUP$FcaCup$parser,
    java.util.Stack            CUP$FcaCup$stack,
    int                        CUP$FcaCup$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$FcaCup$result;

      /* select the action based on the action number */
      switch (CUP$FcaCup$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // LISTA ::= DATO 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("LISTA",8, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // LISTA ::= DATO Coma 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("LISTA",8, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-1)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // LISTA ::= LISTA DATO 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("LISTA",8, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-1)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // LISTA ::= LISTA DATO Coma 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("LISTA",8, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-2)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CARACTERISTICA ::= Archivo 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("CARACTERISTICA",7, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CARACTERISTICA ::= TituloY 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("CARACTERISTICA",7, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CARACTERISTICA ::= TituloX 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("CARACTERISTICA",7, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CARACTERISTICA ::= Valores 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("CARACTERISTICA",7, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CARACTERISTICA ::= Ejex 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("CARACTERISTICA",7, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CARACTERISTICA ::= Titulo 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("CARACTERISTICA",7, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // DATO ::= Dollar LlaveA PuntajeEspecifico Coma Cadena Coma Cadena Coma Cadena LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("DATO",6, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-9)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // DATO ::= Dollar LlaveA PuntajeGeneral LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("DATO",6, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-3)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // DATO ::= CorcheA LISTA CorcheC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("DATO",6, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-2)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // DATO ::= CadenaS 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("DATO",6, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // DATO ::= Cadena 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("DATO",6, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // DATO ::= Numero 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("DATO",6, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // DATO ::= Identificador 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("DATO",6, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // TIPODATO ::= Double 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("TIPODATO",5, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // TIPODATO ::= String 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("TIPODATO",5, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CONFIGURACION ::= CARACTERISTICA DosPuntos DATO PuntoComa 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",4, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-3)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CONFIGURACION ::= CONFIGURACION CARACTERISTICA DosPuntos DATO PuntoComa 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("CONFIGURACION",4, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-4)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // EJECUTARREPORTE ::= Compare ParenA CadenaS Coma CadenaS ParenC PuntoComa 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("EJECUTARREPORTE",3, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-6)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // EJECUTARREPORTE ::= Compare ParenA Cadena Coma Cadena ParenC PuntoComa 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("EJECUTARREPORTE",3, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-6)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // VARIABLE ::= TIPODATO Identificador Igual DATO PuntoComa 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-4)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // VARIABLE ::= VARIABLE TIPODATO Identificador Igual DATO PuntoComa 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-5)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // REPORTE ::= GenerarReporteEstadistico LlaveA EJECUTARREPORTE LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-3)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // REPORTE ::= GraficaLineas LlaveA CONFIGURACION LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-3)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // REPORTE ::= GraficaPie LlaveA CONFIGURACION LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-3)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // REPORTE ::= GraficaBarras LlaveA CONFIGURACION LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-3)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // REPORTE ::= DefinirGlobales LlaveA VARIABLE LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-3)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // REPORTE ::= REPORTE GenerarReporteEstadistico LlaveA EJECUTARREPORTE LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-4)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // REPORTE ::= REPORTE GraficaLineas LlaveA CONFIGURACION LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-4)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // REPORTE ::= REPORTE GraficaPie LlaveA CONFIGURACION LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-4)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // REPORTE ::= REPORTE GraficaBarras LlaveA CONFIGURACION LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-4)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // REPORTE ::= REPORTE DefinirGlobales LlaveA VARIABLE LlaveC 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("REPORTE",1, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-4)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= REPORTE 
            {
              Object RESULT =null;

              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          return CUP$FcaCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-1)).value;
		RESULT = start_val;
              CUP$FcaCup$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$FcaCup$stack.elementAt(CUP$FcaCup$top-1)), ((java_cup.runtime.Symbol)CUP$FcaCup$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$FcaCup$parser.done_parsing();
          return CUP$FcaCup$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

